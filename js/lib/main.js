var projectName = "APQGPR";
var qlikProyectName = "APQGPR";
var qlikScriptsUrl = "http://localhost:5500/";
var qlikStylesUrl =
  "https://qlsdevelop.lacaixapre.glcpre.es/resources/autogenerated/qlik-styles.css";
var qlikStylesUrl2 = "";
var qlikPrefix = "/";
var qlikHost = "qlsdevelop.lacaixapre.glcpre.es";
var qlikPort = "443";
var qlikProjectId_pre = "72bbbd8c-c805-46e1-94dc-419053032402";
var qlikProjectId = "72bbbd8c-c805-46e1-94dc-419053032402";

var proScriptsUrl = "extensions/" + projectName + "/";
var devScriptsUrl = "";
var proPrefix = window.location.pathname.substr(
  0,
  window.location.pathname.toLowerCase().lastIndexOf("/extensions") + 1
);
var devPrefix = qlikPrefix;

var devServerConfig = {
  host: qlikHost,
  prefix: qlikPrefix,
  port: qlikPort,
  isSecure: true,
};

var devAppsConfig = {
  APQGPR: {
    config: {
      id: qlikProjectId,
      host: qlikHost,
      prefix: qlikPrefix,
      port: qlikPort,
      isSecure: true,
    },
  },
};

var proServerConfig = {
  host: window.location.hostname,
  prefix: "/",
  port: window.location.port,
  isSecure: window.location.protocol === "https:",
};

var proAppsConfig = {
  APQGPR: {
    config: {
      id: "",
      host: window.location.hostname,
      prefix: prefix,
      port: window.location.port,
      isSecure: window.location.protocol === "https:",
    },
  },
};

var tmpCurrentApp = null;
var tmpMultiAppValues;

if (window.location.hostname === "localhost" || window.location.hostname === "127.0.0.1") {
  var prefix = devPrefix;
  var scriptsUrl = devScriptsUrl;
  var appsConfig = devAppsConfig;
  var serverConfig = devServerConfig;

  $.get(
    "views/components/qlik-rain-loader.html",
    function (element) {
      $("body").prepend(element);
    },
    "html"
  );
} else {
  var prefix = proPrefix;
  var scriptsUrl = proScriptsUrl;
  var appsConfig = proAppsConfig;
  var serverConfig = proServerConfig;

  $.get(
    "views/components/qlik-rain-loader.html",
    function (element) {
      $("body").prepend(element);
    },
    "html"
  );
}

window.isIE = function () {
  var ua = window.navigator.userAgent;
  var msie = ua.indexOf("MSIE ");
  if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./)) {
    return true;
  }
  return false;
};

window.isIEAlert = function () {
  if (window.isIE()) {
    alert(
      "Este navegador no es compatible con la aplicaciÃ³n. Se recomienda acceder a travÃ©s de Google Chrome o Microsoft Edge para una experiencia de usuario satisfactoria."
    );
  }
};

window.deleteQlikTicket = function () {
  let href = window.location.href;
  let finalUrl = "";

  if (href.includes("qlikTicket")) {
    href = href.split("?qlikTicket=");
    finalUrl = href[0];
    href = href[1].split("#");
    finalUrl = finalUrl + "#" + href[1];
    window.location.href = finalUrl;
  } else {
    if (href.includes("#undefined")) {
      finalUrl = href.replace("#undefined", "#/index");
      window.location.href = finalUrl;
    }
  }
};

require.config({
  baseUrl:
    (serverConfig.isSecure ? "https://" : "http://") +
    serverConfig.host +
    (serverConfig.port ? ":" + serverConfig.port : "") +
    serverConfig.prefix +
    "resources",
  paths: {
    /* Controllers */
    "controller.budgetAnalysis": prefix + scriptsUrl + "js/controllers/budget-analysis",
    "controller.budgetTable": prefix + scriptsUrl + "js/controllers/budget-table",
    "controller.deferredAnalysis": prefix + scriptsUrl + "js/controllers/deferred-analysis",
    "controller.global": prefix + scriptsUrl + "js/controllers/global",
    "controller.globalView": prefix + scriptsUrl + "js/controllers/global-view",
    "controller.invoicingTable": prefix + scriptsUrl + "js/controllers/invoicing-table",
    "controller.managementKPIs": prefix + scriptsUrl + "js/controllers/management-kpis",
    "controller.paidInvoices": prefix + scriptsUrl + "js/controllers/paid-invoices",
    "controller.pendingInvoices": prefix + scriptsUrl + "js/controllers/pending-invoices",
    "controller.totalInvoices": prefix + scriptsUrl + "js/controllers/total-invoices",
    /* Services */
    "service.api": prefix + scriptsUrl + "js/services/api",
    "service.openApp": prefix + scriptsUrl + "js/services/openApp",
    /* Directives */
    navigation: prefix + scriptsUrl + "js/directives/navigation",
    /* Libs */
    domReady: prefix + scriptsUrl + "vendors/ajax/domready/ready.min",
  },
});

define("main", ["require", "angular", "js/qlik"], function (require, angular, qlik) {
  "use strict";

  var app = angular.module("APQGPR", ["ngAnimate", "ngRoute"]);

  app.run(function ($rootScope) {
    $rootScope.global = {
      qlik: qlik,
      apps: {},
    };

    angular.forEach(appsConfig, function (value, key) {
      $rootScope.global.apps[key] = {
        config: value.config,
        app: null,
        model: [],
      };
    });

    $rootScope.removeBubbles = function () {
      angular.element("div#qlik-rain-loader").remove();
    };
  });

  app.config(function ($routeProvider, $locationProvider) {
    $locationProvider.hashPrefix("");

    $routeProvider
      .when("/budget-analysis", {
        resolve: {
          isAppOpened: function ($q, openApp) {
            return $q.resolve(openApp.openAppMethod());
          },
        },
        templateUrl: prefix + scriptsUrl + "views/budget-analysis.html",
        controller: "controller.budgetAnalysis",
      })
      .when("/budget-table", {
        resolve: {
          isAppOpened: function ($q, openApp) {
            return $q.resolve(openApp.openAppMethod());
          },
        },
        templateUrl: prefix + scriptsUrl + "views/budget-table.html",
        controller: "controller.budgetTable",
      })
      .when("/deferred-analysis", {
        resolve: {
          isAppOpened: function ($q, openApp) {
            return $q.resolve(openApp.openAppMethod());
          },
        },
        templateUrl: prefix + scriptsUrl + "views/deferred-analysis.html",
        controller: "controller.deferredAnalysis",
      })
      .when("/global-view", {
        resolve: {
          isAppOpened: function ($q, openApp) {
            return $q.resolve(openApp.openAppMethod());
          },
        },
        templateUrl: prefix + scriptsUrl + "views/global-view.html",
        controller: "controller.globalView",
      })
      .when("/invoicing-table", {
        resolve: {
          isAppOpened: function ($q, openApp) {
            return $q.resolve(openApp.openAppMethod());
          },
        },
        templateUrl: prefix + scriptsUrl + "views/invoicing-table.html",
        controller: "controller.invoicingTable",
      })
      .when("/management-kpis", {
        resolve: {
          isAppOpened: function ($q, openApp) {
            return $q.resolve(openApp.openAppMethod());
          },
        },
        templateUrl: prefix + scriptsUrl + "views/management-kpis.html",
        controller: "controller.managementKPIs",
      })
      .when("/paid-invoices", {
        resolve: {
          isAppOpened: function ($q, openApp) {
            return $q.resolve(openApp.openAppMethod());
          },
        },
        templateUrl: prefix + scriptsUrl + "views/paid-invoices.html",
        controller: "controller.paidInvoices",
      })
      .when("/pending-invoices", {
        resolve: {
          isAppOpened: function ($q, openApp) {
            return $q.resolve(openApp.openAppMethod());
          },
        },
        templateUrl: prefix + scriptsUrl + "views/pending-invoices.html",
        controller: "controller.pendingInvoices",
      })
      .when("/total-invoices", {
        resolve: {
          isAppOpened: function ($q, openApp) {
            return $q.resolve(openApp.openAppMethod());
          },
        },
        templateUrl: prefix + scriptsUrl + "views/total-invoices.html",
        controller: "controller.totalInvoices",
      })
      .otherwise({ redirectTo: "/global-view" });
  });
  require([
    "domReady",
    "js/qlik",
    "angular",
    "controller.budgetAnalysis",
    "controller.budgetTable",
    "controller.deferredAnalysis",
    "controller.global",
    "controller.globalView",
    "controller.invoicingTable",
    "controller.managementKPIs",
    "controller.paidInvoices",
    "controller.pendingInvoices",
    "controller.totalInvoices",
    "navigation",
    "service.api",
    "service.openApp",
  ], function (document, qlik) {
    if (window.location.hostname != "localhost") {
      var client = new XMLHttpRequest();
      client.open("GET", "globals.json");
      client.onreadystatechange = function () {
        if (
          client.readyState === XMLHttpRequest.DONE &&
          client.status >= 200 &&
          client.status < 400
        ) {
          var data = JSON.parse(client.responseText);
          appsConfig["APQGPR"].config.id = data.appConfig[0].id;
        }
      };
      client.send();
    }
    qlik.setOnError(function (error) {
      if (!angular.isUndefined(error) && error.code == 16) {
        location.reload();
      } else {
        // console.log(error);
      }
    });

    var $injector = angular.injector(["ng"]);
    $injector.invoke(function ($timeout) {
      $timeout(function () {
        angular.element("div#qlik-rain-loader").remove();
        angular.bootstrap(document, ["APQGPR", "qlik-angular"]);
      }, 1000);
    }, "html");
  });
});

window.deleteQlikTicket();
